"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _templateObject4() {
  var data = _taggedTemplateLiteral(["\n  line-height: 24px;\n  height: 40px;\n  padding: 6px 11px;\n  font-size: 16px;\n  width: 100%;\n  cursor: pointer;\n  background: ", ";\n  box-shadow: 0 0 1px #ccc;\n  &:hover{\n    background: lightgray;\n  }\n"]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = _taggedTemplateLiteral(["\n  position: absolute;\n  left: 0;\n  top: 40px;\n  z-index: 1000;\n  width: 100%;\n"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteral(["\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  line-height: 24px;\n  height: 40px;\n  padding: 6px 11px;\n  font-size: 16px;\n  width: 100%;\n  &:focus{\n    outline: none !important;\n    box-shadow: 0 0 4px #ccc;\n  }\n"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n  position: relative;\n  & *{\n    box-sizing: border-box;\n  }\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var ACIContainer = _styledComponents.default.div(_templateObject());

var Input = _styledComponents.default.input(_templateObject2());

var MenuContainer = _styledComponents.default.div(_templateObject3());

var MenuLi = _styledComponents.default.div(_templateObject4(), function (p) {
  return p.active ? '#ccc' : 'white';
});

var Style = {
  ACIContainer: ACIContainer,
  Input: Input,
  MenuContainer: MenuContainer,
  MenuLi: MenuLi
};
var initState = {
  suggest: [],
  selectedSuggest: ''
};

var ACInput =
/*#__PURE__*/
function (_React$Component) {
  _inherits(ACInput, _React$Component);

  function ACInput() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, ACInput);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ACInput)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "inputRef", _react.default.createRef());

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "state", initState);

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "onChange", function (e) {
      var _this$props = _this.props,
          dataSource = _this$props.dataSource,
          onChange = _this$props.onChange;
      var _e$target = e.target,
          value = _e$target.value,
          selectionStart = _e$target.selectionStart; // 1. get last keyword

      var lastWord = value.split(' ').pop().toLowerCase();

      if (!lastWord || selectionStart !== value.length) {
        _this.setState(initState);

        onChange(value);
        return;
      } // 2. filter suggest


      var suggest = dataSource.map(function (keyword) {
        return keyword.toLowerCase();
      }).filter(function (keyword) {
        return keyword.indexOf(lastWord) === 0;
      }).slice(0, 10);
      var selectedSuggest = suggest[0] || ''; // 3. update suggest array

      _this.setState({
        suggest: suggest,
        selectedSuggest: selectedSuggest
      });

      onChange(value);
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "onClickSuggest", function (selectedSuggest) {
      return function () {
        _this.onComplete(selectedSuggest);

        _this.inputRef.current.focus();
      };
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "onComplete", function (selectedSuggest) {
      var _this$props2 = _this.props,
          value = _this$props2.value,
          onChange = _this$props2.onChange;
      var arr = value.split(' ');
      arr.splice(arr.length - 1, 1, selectedSuggest);
      var newVal = arr.join(' ');
      onChange(newVal);

      _this.setState(initState);
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "onBlur", function () {
      setTimeout(function () {
        _this.setState({
          suggest: []
        });
      }, 300);
    });

    return _this;
  }

  _createClass(ACInput, [{
    key: "onKeyDown",
    value: function onKeyDown(e) {
      var _this$state = this.state,
          suggest = _this$state.suggest,
          selectedSuggest = _this$state.selectedSuggest;

      if (e.which === 38) {
        var selectIndex = suggest.findIndex(function (keyword) {
          return keyword === selectedSuggest;
        });

        if (selectIndex === 0) {
          // choose last suggest keyword
          this.setState({
            selectedSuggest: suggest[suggest.length - 1]
          });
        } else {
          // choose next suggest
          this.setState({
            selectedSuggest: suggest[selectIndex - 1]
          });
        } // when press up


        e.preventDefault();
      } else if (e.which === 40) {
        var _selectIndex = suggest.findIndex(function (keyword) {
          return keyword === selectedSuggest;
        });

        if (_selectIndex === suggest.length - 1) {
          // choose last suggest keyword
          this.setState({
            selectedSuggest: suggest[0]
          });
        } else {
          // choose next suggest
          this.setState({
            selectedSuggest: suggest[_selectIndex + 1]
          });
        }

        e.preventDefault();
      } else if (e.which === 13 && suggest.length > 0) {
        this.onComplete(selectedSuggest);
      } else if (e.which === 32) {
        // when press space
        this.setState(initState);
      }
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      var ele = this.inputRef.current; // 1. add input event to prevent arrow up and down

      ele.addEventListener('keydown', this.onKeyDown.bind(this));
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      var ele = this.inputRef.current; // 1. remove event;

      ele.removeEventListener('keydown', this.onKeyDown);
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props3 = this.props,
          value = _this$props3.value,
          style = _this$props3.style,
          className = _this$props3.className,
          menuClassName = _this$props3.menuClassName;
      var _this$state2 = this.state,
          suggest = _this$state2.suggest,
          selectedSuggest = _this$state2.selectedSuggest;
      var displaySuggest = suggest.length > 0;
      return _react.default.createElement(Style.ACIContainer, null, _react.default.createElement(Style.Input, {
        value: value,
        onChange: this.onChange,
        ref: this.inputRef,
        onBlur: this.onBlur,
        style: style,
        className: className
      }), _react.default.createElement(Style.MenuContainer, {
        display: displaySuggest,
        className: menuClassName
      }, suggest.map(function (keyword) {
        return _react.default.createElement(Style.MenuLi, {
          key: keyword,
          onClick: _this2.onClickSuggest(keyword),
          active: keyword === selectedSuggest
        }, keyword);
      })));
    }
  }]);

  return ACInput;
}(_react.default.Component);

exports.default = ACInput;
ACInput.propTypes = {
  value: _propTypes.default.string,
  onChange: _propTypes.default.func,
  dataSource: _propTypes.default.arrayOf(_propTypes.default.string),
  style: _propTypes.default.shape({}),
  className: _propTypes.default.string,
  menuClassName: _propTypes.default.string
};
ACInput.defaultProps = {
  value: '',
  onChange: function onChange(value) {},
  dataSource: [],
  style: {},
  className: '',
  menuClassName: ''
};